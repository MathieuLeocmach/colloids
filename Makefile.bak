# generated by cbp2makefile.py
# see http://pix.test.at/wiki/cbp2makefile for more info

#directory tree related. Must be adapted for each machine
OUTPUT_DIR = /home/mathieu/bin/
#OUTPUT_DIR = ./
#BOOST_DIR = /home/mathieu/boost
BOOST_DIR = /usr/local/boost

#complier related
CPP = icpc
CXXFLAGS += -O3 -Wall -I $(BOOST_DIR)
LDFLAGS += -L$(OUTPUT_DIR)
ifeq ($(CPP),icpc)
	CXXFLAGS += -w1 -xT -parallel -openmp -use-intel-optimized-headers 
endif

#OS related
OS=nux
LIB_BASE_NAME = particles
ifeq ($(OS),win)
	SONAME = $(LIB_BASE_NAME).dll
	EXT = .exe
	MKDIR_COMMAND =
else
	SONAME = lib$(LIB_BASE_NAME).so
	EXT = 
	MKDIR_COMMAND = -p
endif
LIB_NAME = $(OUTPUT_DIR)$(SONAME)
LIBS += -l$(LIB_BASE_NAME)

#following option is -DLINUX even under MinGW
CXXFLAGS += -DLINUX
OBJ_OUTPUT = objs/


SRC := $(wildcard *.cpp)
HEADERS := $(wildcard *.hpp)
OBJ := $(addprefix $(OBJ_OUTPUT), $(SRC:.cpp=.o) )
TARGETS := $(notdir $(basename $(wildcard mains/*.cpp)))

SRC_PERIODIC := rdf.cpp boo.cpp
OBJ_PERIODIC := $(addprefix $(OBJ_OUTPUT)mains/periodic_, $(SRC_PERIODIC:.cpp=.o) )
TARGETS_PERIODIC := $(addprefix periodic_, $(basename $(SRC_PERIODIC)))

all: library $(TARGETS) $(TARGETS_PERIODIC)

library: $(LIB_NAME)

$(LIB_NAME): $(OBJ)
	-@mkdir $(MKDIR_COMMAND) $(OUTPUT_DIR)
	@$(CPP) -o $@ -shared $(CXXFLAGS) $^

#making the target "c:/bin/target.exe" a dependency of the target "target"
$(foreach tar,$(TARGETS) $(TARGETS_PERIODIC),$(eval $(tar): $(OUTPUT_DIR)$(tar)$(EXT)) )

#linking of each target
$(foreach tar,$(TARGETS) $(TARGETS_PERIODIC),$(eval $(OUTPUT_DIR)$(tar)$(EXT): $(OBJ_OUTPUT)mains/$(tar).o $(LIB_NAME) ; $(CPP) -o $$@ $$< $(LDFLAGS) $(LIBS) $(CXXFLAGS)))

$(OBJ_OUTPUT)%.o: %.cpp $(HEADERS)
	-@mkdir $(MKDIR_COMMAND) $(OBJ_OUTPUT)
	@$(CPP) -o $@ -c $< -fPIC $(CXXFLAGS)

$(OBJ_OUTPUT)mains/%.o: mains/%.cpp
	-@mkdir $(MKDIR_COMMAND) $(OBJ_OUTPUT)mains
	@$(CPP) -o $@ -c $< $(CXXFLAGS)

$(OBJ_OUTPUT)mains/periodic_%.o: mains/%.cpp
	-@mkdir $(MKDIR_COMMAND) $(OBJ_OUTPUT)mains
	@$(CPP) -o $@ -c $< $(CXXFLAGS) -Duse_periodic

clean: cleanlibrary $(addprefix clean, $(TARGETS) $(TARGETS_PERIODIC))

cleanlibrary:
	-@rm -rf $(OBJ_OUTPUT)*.o

#cleaning each target
$(foreach tar,$(TARGETS) $(TARGETS_PERIODIC),$(eval clean$(tar): cleanlibrary; -@rm -rf $(OBJ_OUTPUT)mains/$(tar).o) )

mrproper: clean
	-@($(foreach tar, $(TARGETS) $(TARGETS_PERIODIC), rm -rf $(OUTPUT_DIR)$(tar)$(EXT) &&) rm -rf $(LIB_NAME))


